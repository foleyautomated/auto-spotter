[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "auto-spotter"
version = "0.1.0"
description = "Always-listening, voice-activated AI Assistant"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "AutoSpotter Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core speech processing
    "faster-whisper>=1.0.0",
    "sounddevice>=0.5.0",
    "numpy>=1.21.0",

    # Voice activity detection
    "torch>=1.9.0",
    "torchaudio>=0.9.0",

    # System tray (cross-platform)
    "pystray>=0.19.0",
    "pillow>=8.0.0",

    # Windows service support
    "pywin32>=227; sys_platform == 'win32'",

    # Screenshot capture
    "pyautogui>=0.9.50",

    # Configuration management
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",

    # HTTP requests for external APIs
    "httpx>=0.24.0",

    # Logging utilities
    "coloredlogs>=15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
build = [
    "pyinstaller>=5.10.0",
    "cx-freeze>=6.14.0",
]

[project.scripts]
autospotter = "pkg.desktop.service.main:main"
autospotter-tray = "pkg.desktop.tray.tray_app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["pkg*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]